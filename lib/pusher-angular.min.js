"use strict";angular.module("pusher-angular",[]).factory("$pusher",["$rootScope","$q","$channel","$connection",function(a,b,c,d){function e(a){return this instanceof e?(this._assertValidClient(a),this.client=a,this.connection=d(a.connection,a),this.channels={},void 0):new e(a)}return e.prototype={subscribe:function(a){var b=c(this.client.subscribe(a),this);return this.channels[a]=b,b},unsubscribe:function(a){this.client.channel(a)&&(this.client.unsubscribe(a),this.channels[a]&&delete this.channels[a])},bind:function(b,c){this.client.bind(b,function(b){c(b),a.$digest()})},bind_all:function(b){this.client.bind_all(function(c,d){b(c,d),a.$digest()})},disconnect:function(){this.client.disconnect()},channel:function(a){return this.channels[a]},allChannels:function(){return this.channels},_assertValidClient:function(a){if(!angular.isObject(a)||!angular.isObject(a.connection)||"function"!=typeof a.channel)throw new Error("Invalid Pusher client object")}},e}]).factory("$channel",["$rootScope","$q","$members",function(a,b,c){function d(a){if(-1==a.indexOf("presence-"))throw new Error("Presence channel required")}function e(a,b){return this instanceof e?(this._assertValidChannel(a),this.baseChannel=a,this.client=b,this.name=a.name,this.members=-1==a.name.indexOf("presence")?function(){throw new Error("Members object only exists for presence channels")}:c(a.members,a),void 0):new e(a,b)}return e.prototype={bind:function(b,c){this.baseChannel.bind(b,function(b){c(b),a.$digest()})},bind_all:function(b){this.baseChannel.bind_all(function(c,d){b(c,d),a.$digest()})},trigger:function(a,b){if(d(this.name),-1==a.indexOf("client-"))throw new Error("Event name requires 'client-' prefix");return this.baseChannel.trigger(a,b)},_assertValidChannel:function(a){if(!angular.isObject(a)||"string"!=typeof a.name)throw new Error("Invalid Pusher channel object")}},e}]).factory("$members",["$rootScope","$q",function(a){function c(b,d){if(!(this instanceof c))return new c(b,d);var e=this;this._assertValidMembers(b),this.baseMembers=b,this.baseChannel=d,this.me={},this.count=0,this.members={},d.bind("pusher:subscription_succeeded",function(b){e.me=b.me,e.count=b.count,e.members=b.members,a.$digest()}),d.bind("pusher:member_added",function(b){e.count++,e.members[b.id.toString()]=b.info?b.info:null,a.$digest()}),d.bind("pusher:member_removed",function(b){e.count--,delete e.members[b.id.toString()],a.$digest()})}return c.prototype={get:function(a){return this.baseMembers.get(a)},each:function(b){this.baseMembers.each(function(c){b(c),a.$digest()})},_assertValidMembers:function(a){if(!angular.isObject(a)||"object"!=typeof a.me)throw new Error("Invalid Pusher channel members object")}},c}]).factory("$connection",["$rootScope","$q",function(a){function c(a,b){return this instanceof c?(this._assertValidConnection(a),this.baseConnection=a,this.baseClient=b,void 0):new c(a,b)}return c.prototype={bind:function(b,c){this.baseConnection.bind(b,function(b){c(b),a.$digest()})},bind_all:function(b){this.baseConnection.bind_all(function(c,d){b(c,d),a.$digest()})},_assertValidConnection:function(a){if(!angular.isObject(a))throw new Error("Invalid Pusher connection object")}},c}]);